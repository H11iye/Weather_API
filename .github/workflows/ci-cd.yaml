name: CI/CD Pipeline to GCP App Engine

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.10", "3.12"]
    env:
      #provide API key from GitHub secrets
      WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' #cache pip downloads for faster builds
    
    - name: Install dependencies
      if: ${{ hashFiles('requirements.txt') != '' }} 
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt pytest requests
    - name: Install pytest (fallback if no requirements.txt)
      if: ${{ hashFiles('requirements.txt') == '' }} 
      run: |
        python -m pip install --upgrade pip
        pip install pytest

    - name: Run tests
      env:
        WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
    # Ensure the current directory is in PYTHONPATH
      run: |
        PYTHONPATH=$(pwd) pytest -q
        

#------------------------ Deploy to GCP App Engine------------------------
  #   - name: Set up Google Cloud SDK
  #     uses: google-github-actions/setup-gcloud@v2
  #     with:
  #       project_id: ${{ secrets.GCP_PROJECT_ID }}
  #       service_account_key: ${{ secrets.GCP_SA_KEY }}
  #       export_default_credentials: true
    
  #   - name: Deploy to App Engine
  #     uses: google-github-actions/deploy-appengine@v2
  #     with:
  #       deliverables: gcp_config.yaml

  #   #----   
  # docker:
  #   name: build and push Docker image to GCR
  #   runs-on: ubuntu-latest
  #   needs: build-test-deploy
  #   permissions:
  #     contents: read
  #     packages: write #required to push to GitHub Container Registry
  #     id-token: write #future-proof for OIDC-enabled flows
  #   env:
  #     IMAGE_NAME: ghcr.io/${{ github.repository }}/weather-api:latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Log in to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Extract docker metadata (tags, labels)
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: ${{ env.IMAGE_NAME }}
  #         tags: |
  #           type=ref,event=branch
  #           type=ref,event=tag
  #           type=sha
  #     - name: Setup docker buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Build (and push if not a PR)
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: .
  #         file: ./Dockerfile
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max