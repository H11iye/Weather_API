name: CI/CD Pipeline to GCP App Engine

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.10", "3.12"]
    env:
      #provide API key from GitHub secrets
      WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' #cache pip downloads for faster builds
    
    - name: Install dependencies
      if: ${{ hashFiles('requirements.txt') != '' }} 
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt pytest requests
    - name: Install pytest (fallback if no requirements.txt)
      if: ${{ hashFiles('requirements.txt') == '' }} 
      run: |
        python -m pip install --upgrade pip
        pip install pytest

    - name: Run tests
      env:
        WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
    # Ensure the current directory is in PYTHONPATH
      run: |
        PYTHONPATH=$(pwd) pytest -q
        

#------------------------ Deploy SECTION to GCP App Engine------------------------
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    # Inject the secretes before the deploy step
    - name: Inject WEATHER_API_KEY into app.yaml
      run: |
        sed -i "s|\${WEATHER_API_KEY}|${{ secrets.WEATHER_API_KEY }}|g" app.yaml


    - name: Deploy to App Engine
      uses: google-github-actions/deploy-appengine@v2
      with:
        deliverables: app.yaml

